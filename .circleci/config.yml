version: 2.1

executors:
  default:
    docker:
      - image: hashicorp/terraform:0.14.10

commands:
  install_awscli:
    steps:
      - run:
          name: install awscli
          command: |
            apk add sudo jq 
            apk --update-cache add python3 py3-pip alpine-sdk
            sudo pip3 install awscli --upgrade
            sudo aws --version
  install_tfnotify:
    steps:
      - run:
          name: install tfnotify
          command: |
            apk update && apk add --no-cache go libc-dev
            go version
            go get -u -v github.com/mercari/tfnotify
  validate:
    steps:
      - run:
          name: terraform validate
          command: |
            cd ./src/tf
            terraform init -backend=false
            terraform validate
  int_and_plan:
    steps:
      - run:
          name: terraform plan
          command: |
            sh ./bin/assume-role.sh
            source aws-env.sh
            cd ./src/tf
            terraform init -input=false
            rm -f plan.out
            terraform plan -out=plan.out
  apply:
    steps:
      - run:
          name: terraform apply
          command: |
            sh ./bin/assume-role.sh
            source aws-env.sh
            cd ./src/tf
            terraform apply -auto-approve plan.out

jobs:
  checkout_code:
    executor: 
      name: default
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
            - .
  validate:
    executor: 
      name: default
    steps:
      - attach_workspace:
          at: .
      - validate
  int_and_plan:
    executor: 
      name: default
    steps:
      - attach_workspace:
          at: .
      - install_awscli
      - int_and_plan
      - persist_to_workspace:
          root: .
          paths:
            - .
  notify_before_apply:
    executor: 
      name: default
    steps:
      - attach_workspace:
          at: .
      - install_tfnotify
      - run:
          name: notify plan result to slack
          command: |
            cd ./src/tf
            cat plan.out | tfnotify --config .tfnotify/slack.yml plan \
            --title "以下のplan結果が反映されます。" \
            --message "https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
  apply:
    executor: 
      name: default
    steps:
      - attach_workspace:
          at: .
      - install_awscli
      - apply

workflows:
  version: 2
  build:
    jobs:
      - checkout_code
      - validate:
          requires:
            - checkout_code
      - int_and_plan:
          requires:
            - validate
          context: TERRAFORM-CI-DEMO
      - notify_before_apply:
          requires:
            - int_and_plan
          context:
            - TERRAFORM-CI-DEMO
            - SLACK_INTEGRATION
      - hold_apply:
          requires:
            - notify_before_apply
          type: approval
          filters:
            branches:
              only:
                - "main"
      - apply:
          requires:
            - hold_apply
          context: TERRAFORM-CI-DEMO
          filters:
            branches:
              only:
                - "main"
